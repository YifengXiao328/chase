NAME : PickTurnPlace;

CONTRACT Recipe:
    input boolean variable pick_exec;
    input boolean variable turn_exec;
    input boolean variable place_exec;

    output boolean variable req_pick;
    output boolean variable req_turn;
    output boolean variable req_place;

    output boolean variable pick_done;
    output boolean variable turn_done;
    output boolean variable place_done;

    Assumptions:
        ~pick_exec /\ ~turn_exec /\ ~place_exec;
        []<>(pick_exec);
        []<>(turn_exec);
        []<>(place_exec);

    Guarantees:
        ~pick_done /\ ~turn_done /\ ~place_done;

        [](pick_exec -> X(pick_done));
        [](pick_done -> X(pick_done));
        [](~pick_done /\ ~pick_exec -> X(~pick_done));

        [](turn_exec -> X(turn_done));
        [](turn_done -> X(turn_done));
        [](~turn_done /\ ~turn_exec -> X(~turn_done));

        [](place_exec -> X(place_done));
        [](place_done -> X(place_done));
        [](~place_done /\ ~place_exec -> X(~place_done));

        []<>(pick_done /\ turn_done /\ place_done);

CONTRACT Turn:
    input boolean variable pick_requested;
    input boolean variable turn_requested;
    input boolean variable place_requested;

    output boolean variable pick_executed;
    output boolean variable turn_executed;
    output boolean variable place_executed;


